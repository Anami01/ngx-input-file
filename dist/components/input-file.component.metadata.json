[{"__symbolic":"module","version":3,"metadata":{"InputFileComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"input-file","style":"\n.input-file .drop-zone {\n  border: 1px dashed #66afe9;\n  border-radius: 5px;\n  background-image: url('../img/dropzone.png');\n  background-repeat: no-repeat;\n  background-position: center center;\n  background-size: 128px;\n  height: 320px;\n  margin-bottom: 15px;\n}\n.input-file .drop-zone .drop-zone-message {\n  text-align: center;\n}\n.input-file .file-preview {\n  border-radius: 5px;\n  border: 1px solid #ddd;\n  margin-bottom: 5px;\n  overflow: auto;\n  padding: 5px;\n  width: 100%;\n}\n.input-file .file-preview .file-preview-item {\n  border: 1px solid #ddd;\n  box-shadow: 1px 1px 5px 0 #a2958a;\n  display: table;\n  float: left;\n  margin: 8px;Urls: [ '../styles/style.css' ]\n  padding: 6px;\n  position: relative;\n  text-align: center;\n}\n.input-file .file-preview .file-preview-item .file-content {\n  height: 170px;\n}\n.input-file .file-preview .file-preview-item .file-content img {\n  height: 160px;\n  width: auto;\n}\n.input-file .file-preview .file-preview-item .file-thumbnail-footer {\n  height: 70px;\n  padding-top: 10px;\n}\n.input-file .file-preview .file-preview-item .file-thumbnail-footer .file-footer-caption {\n  color: #777;\n  display: block;\n  font-size: 11px;\n  margin: 5px auto;\n  overflow: hidden;\n  padding-top: 4px;\n  text-align: center;\n  text-overflow: ellipsis;\n  width: 160px;\n  white-space: nowrap;\n}\n.input-file .file-preview .file-preview-item:hover {\n  box-shadow: 3px 3px 5px 0 #333;\n}\n.input-file .file-caption-main {\n  width: 100%;\n}\n.input-file .file-caption-main .input-active {\n  background-color: #fff;\n  border-color: #5cb3fd;\n  color: #464a4c;\n  outline: 0;\n}\n.input-file .file-caption-main .file-caption-name:focus {\n  outline: 0;\n}\n.input-file .file-caption-main .form-control,\n.input-file .file-caption-main .btn-action {\n  z-index: 10;\n}\n.input-file .file-caption-main .btn-file input[type=file] {\n  background: none;\n  cursor: inherit;\n  display: block;\n  min-width: 100%;\n  min-height: 100%;\n  opacity: 0;\n  position: absolute;\n  right: 0;\n  text-align: right;\n  top: 0;\n}","template":"\n<div class=\"row input-file\" dropZone [disabled]=\"dropZoneDisabled\" (fileDragOver)=\"onFileDragOver()\" (fileDragLeave)=\"onFileDragLeave()\" (fileDrop)=\"onFileDrop($event)\">\n    <div class=\"col-12 drop-zone\" *ngIf=\"isDragOver\">\n        <div class=\"drop-zone-message\">\n        </div>\n    </div>\n    <div class=\"col-12\" *ngIf=\"isNotNullOrEmpty() && !isDragOver\">\n        <div class=\"file-preview\">\n            <button type=\"button\" class=\"close\" (click)=\"onRemove()\">\n                <span aria-hidden=\"true\">&times;</span>\n            </button>\n            <div class=\"file-preview-container\">\n                <div class=\"file-preview-item\" *ngFor=\"let file of model; let i = index\">\n                    <button type=\"button\" class=\"close\" (click)=\"onRemoveFile(i)\">\n                        <span aria-hidden=\"true\">&times;</span>\n                    </button>\n                    <div class=\"file-content\">\n                        <img src=\"{{ file.icon }}\" *ngIf=\"file.icon\"> \n                    </div>\n                    <div class=\"file-thumbnail-footer\">\n                        <div class=\"file-footer-caption\" *ngIf=\"file.file\">\n                            <p>{{ file.file.name }}</p>\n                            <samp>{{ file.size }}</samp>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n    <div class=\"col-12 input-group file-caption-main\" *ngIf=\"!isDragOver\">\n        <div class=\"form-control\" [ngClass]=\"{'input-active': isInputActive}\">\n            <div class=\"file-caption-name\" tabindex=\"500\">\n                <i class=\"fa fa-file-o\" aria-hidden=\"true\" *ngIf=\"isNotNullOrEmpty()\"></i>\n                <span>{{ getInputText() }}</span>\n            </div>\n        </div>\n        <span class=\"input-group-btn\">\n            <button class=\"btn btn-secondary btn-action\" type=\"button\" title=\"Clear selected files\" tabindex=\"500\" (click)=\"onRemove()\" *ngIf=\"isNotNullOrEmpty()\">\n                <i class=\"fa fa-trash-o\" aria-hidden=\"true\"></i>  \n                <span class=\"hidden-xs-down\">{{ textRemove }}</span>\n            </button>\n        </span>\n        <span class=\"input-group-btn\" *ngIf=\"!disableUpload\">\n            <button class=\"btn btn-secondary btn-action\" type=\"button\" title=\"Upload selected files\" tabindex=\"500\" (click)=\"onUpload()\" *ngIf=\"isNotNullOrEmpty()\">\n                <i class=\"fa fa-cloud-upload\" aria-hidden=\"true\"></i>  \n                <span class=\"hidden-xs-down\">{{ textUpload }}</span>\n            </button>\n        </span>\n        <span class=\"input-group-btn\">\n            <div class=\"btn btn-primary btn-file\" tabindex=\"500\" [ngClass]=\"{'disabled': dropZoneDisabled}\">\n                <i class=\"fa fa-folder-open-o\" aria-hidden=\"true\"></i>\n                <span class=\"hidden-xs-down\">{{ textBrowseÂ }}</span>\n                <input id=\"{{ inputId }}\" class=\"file\" name=\"input-file-name\" type=\"file\" \n                    accept=\"{{ inputAccept }}\" \n                    [attr.multiple]=\"inputMaxFiles > 1 ? true : null\" \n                    [disabled]=\"dropZoneDisabled\"\n                    (change)=\"onChange($event)\" \n                    (blur)=\"onBlur()\" \n                    (focus)=\"onFocus()\" \n                    #inputFile>\n            </div>\n        </span>\n    </div>\n</div>"}]}],"members":{"inputId":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"inputAccept":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"disableUpload":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"inputMaxFiles":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"model":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"textBrowse":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"textFileSelected":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"textNoFile":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"textRemove":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"textUpload":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"limitReached":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output"}}]}],"acceptedFile":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output"}}]}],"rejectedFile":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output"}}]}],"removedFile":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output"}}]}],"uploadFiles":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output"}}]}],"inputFile":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild"},"arguments":["inputFile"]}]}],"__ctor__":[{"__symbolic":"constructor"}],"onBlur":[{"__symbolic":"method"}],"onChange":[{"__symbolic":"method"}],"onFocus":[{"__symbolic":"method"}],"onFileDragOver":[{"__symbolic":"method"}],"onFileDragLeave":[{"__symbolic":"method"}],"onFileDrop":[{"__symbolic":"method"}],"onRemove":[{"__symbolic":"method"}],"onRemoveFile":[{"__symbolic":"method"}],"onUpload":[{"__symbolic":"method"}],"getInputText":[{"__symbolic":"method"}],"isNotNullOrEmpty":[{"__symbolic":"method"}],"acceptedFileHandler":[{"__symbolic":"method"}],"addInputFile":[{"__symbolic":"method"}],"isTypeImage":[{"__symbolic":"method"}],"isTypeEnabled":[{"__symbolic":"method"}],"limitReachedHandler":[{"__symbolic":"method"}],"readFileHandler":[{"__symbolic":"method"}],"rejectedFileHandler":[{"__symbolic":"method"}],"removedFileHandler":[{"__symbolic":"method"}],"removeHandler":[{"__symbolic":"method"}],"setFileIcon":[{"__symbolic":"method"}],"setSize":[{"__symbolic":"method"}]}}}},{"__symbolic":"module","version":1,"metadata":{"InputFileComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"input-file","style":"\n.input-file .drop-zone {\n  border: 1px dashed #66afe9;\n  border-radius: 5px;\n  background-image: url('../img/dropzone.png');\n  background-repeat: no-repeat;\n  background-position: center center;\n  background-size: 128px;\n  height: 320px;\n  margin-bottom: 15px;\n}\n.input-file .drop-zone .drop-zone-message {\n  text-align: center;\n}\n.input-file .file-preview {\n  border-radius: 5px;\n  border: 1px solid #ddd;\n  margin-bottom: 5px;\n  overflow: auto;\n  padding: 5px;\n  width: 100%;\n}\n.input-file .file-preview .file-preview-item {\n  border: 1px solid #ddd;\n  box-shadow: 1px 1px 5px 0 #a2958a;\n  display: table;\n  float: left;\n  margin: 8px;Urls: [ '../styles/style.css' ]\n  padding: 6px;\n  position: relative;\n  text-align: center;\n}\n.input-file .file-preview .file-preview-item .file-content {\n  height: 170px;\n}\n.input-file .file-preview .file-preview-item .file-content img {\n  height: 160px;\n  width: auto;\n}\n.input-file .file-preview .file-preview-item .file-thumbnail-footer {\n  height: 70px;\n  padding-top: 10px;\n}\n.input-file .file-preview .file-preview-item .file-thumbnail-footer .file-footer-caption {\n  color: #777;\n  display: block;\n  font-size: 11px;\n  margin: 5px auto;\n  overflow: hidden;\n  padding-top: 4px;\n  text-align: center;\n  text-overflow: ellipsis;\n  width: 160px;\n  white-space: nowrap;\n}\n.input-file .file-preview .file-preview-item:hover {\n  box-shadow: 3px 3px 5px 0 #333;\n}\n.input-file .file-caption-main {\n  width: 100%;\n}\n.input-file .file-caption-main .input-active {\n  background-color: #fff;\n  border-color: #5cb3fd;\n  color: #464a4c;\n  outline: 0;\n}\n.input-file .file-caption-main .file-caption-name:focus {\n  outline: 0;\n}\n.input-file .file-caption-main .form-control,\n.input-file .file-caption-main .btn-action {\n  z-index: 10;\n}\n.input-file .file-caption-main .btn-file input[type=file] {\n  background: none;\n  cursor: inherit;\n  display: block;\n  min-width: 100%;\n  min-height: 100%;\n  opacity: 0;\n  position: absolute;\n  right: 0;\n  text-align: right;\n  top: 0;\n}","template":"\n<div class=\"row input-file\" dropZone [disabled]=\"dropZoneDisabled\" (fileDragOver)=\"onFileDragOver()\" (fileDragLeave)=\"onFileDragLeave()\" (fileDrop)=\"onFileDrop($event)\">\n    <div class=\"col-12 drop-zone\" *ngIf=\"isDragOver\">\n        <div class=\"drop-zone-message\">\n        </div>\n    </div>\n    <div class=\"col-12\" *ngIf=\"isNotNullOrEmpty() && !isDragOver\">\n        <div class=\"file-preview\">\n            <button type=\"button\" class=\"close\" (click)=\"onRemove()\">\n                <span aria-hidden=\"true\">&times;</span>\n            </button>\n            <div class=\"file-preview-container\">\n                <div class=\"file-preview-item\" *ngFor=\"let file of model; let i = index\">\n                    <button type=\"button\" class=\"close\" (click)=\"onRemoveFile(i)\">\n                        <span aria-hidden=\"true\">&times;</span>\n                    </button>\n                    <div class=\"file-content\">\n                        <img src=\"{{ file.icon }}\" *ngIf=\"file.icon\"> \n                    </div>\n                    <div class=\"file-thumbnail-footer\">\n                        <div class=\"file-footer-caption\" *ngIf=\"file.file\">\n                            <p>{{ file.file.name }}</p>\n                            <samp>{{ file.size }}</samp>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n    <div class=\"col-12 input-group file-caption-main\" *ngIf=\"!isDragOver\">\n        <div class=\"form-control\" [ngClass]=\"{'input-active': isInputActive}\">\n            <div class=\"file-caption-name\" tabindex=\"500\">\n                <i class=\"fa fa-file-o\" aria-hidden=\"true\" *ngIf=\"isNotNullOrEmpty()\"></i>\n                <span>{{ getInputText() }}</span>\n            </div>\n        </div>\n        <span class=\"input-group-btn\">\n            <button class=\"btn btn-secondary btn-action\" type=\"button\" title=\"Clear selected files\" tabindex=\"500\" (click)=\"onRemove()\" *ngIf=\"isNotNullOrEmpty()\">\n                <i class=\"fa fa-trash-o\" aria-hidden=\"true\"></i>  \n                <span class=\"hidden-xs-down\">{{ textRemove }}</span>\n            </button>\n        </span>\n        <span class=\"input-group-btn\" *ngIf=\"!disableUpload\">\n            <button class=\"btn btn-secondary btn-action\" type=\"button\" title=\"Upload selected files\" tabindex=\"500\" (click)=\"onUpload()\" *ngIf=\"isNotNullOrEmpty()\">\n                <i class=\"fa fa-cloud-upload\" aria-hidden=\"true\"></i>  \n                <span class=\"hidden-xs-down\">{{ textUpload }}</span>\n            </button>\n        </span>\n        <span class=\"input-group-btn\">\n            <div class=\"btn btn-primary btn-file\" tabindex=\"500\" [ngClass]=\"{'disabled': dropZoneDisabled}\">\n                <i class=\"fa fa-folder-open-o\" aria-hidden=\"true\"></i>\n                <span class=\"hidden-xs-down\">{{ textBrowseÂ }}</span>\n                <input id=\"{{ inputId }}\" class=\"file\" name=\"input-file-name\" type=\"file\" \n                    accept=\"{{ inputAccept }}\" \n                    [attr.multiple]=\"inputMaxFiles > 1 ? true : null\" \n                    [disabled]=\"dropZoneDisabled\"\n                    (change)=\"onChange($event)\" \n                    (blur)=\"onBlur()\" \n                    (focus)=\"onFocus()\" \n                    #inputFile>\n            </div>\n        </span>\n    </div>\n</div>"}]}],"members":{"inputId":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"inputAccept":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"disableUpload":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"inputMaxFiles":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"model":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"textBrowse":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"textFileSelected":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"textNoFile":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"textRemove":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"textUpload":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"limitReached":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output"}}]}],"acceptedFile":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output"}}]}],"rejectedFile":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output"}}]}],"removedFile":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output"}}]}],"uploadFiles":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output"}}]}],"inputFile":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild"},"arguments":["inputFile"]}]}],"__ctor__":[{"__symbolic":"constructor"}],"onBlur":[{"__symbolic":"method"}],"onChange":[{"__symbolic":"method"}],"onFocus":[{"__symbolic":"method"}],"onFileDragOver":[{"__symbolic":"method"}],"onFileDragLeave":[{"__symbolic":"method"}],"onFileDrop":[{"__symbolic":"method"}],"onRemove":[{"__symbolic":"method"}],"onRemoveFile":[{"__symbolic":"method"}],"onUpload":[{"__symbolic":"method"}],"getInputText":[{"__symbolic":"method"}],"isNotNullOrEmpty":[{"__symbolic":"method"}],"acceptedFileHandler":[{"__symbolic":"method"}],"addInputFile":[{"__symbolic":"method"}],"isTypeImage":[{"__symbolic":"method"}],"isTypeEnabled":[{"__symbolic":"method"}],"limitReachedHandler":[{"__symbolic":"method"}],"readFileHandler":[{"__symbolic":"method"}],"rejectedFileHandler":[{"__symbolic":"method"}],"removedFileHandler":[{"__symbolic":"method"}],"removeHandler":[{"__symbolic":"method"}],"setFileIcon":[{"__symbolic":"method"}],"setSize":[{"__symbolic":"method"}]}}}}]