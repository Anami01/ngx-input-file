{"version":3,"file":"ngx-input-file.js","sources":["~/ngx-input-file/ngx-input-file/ngx-input-file.ts","~/ngx-input-file/ngx-input-file/src/app/utils/input-file.options.ts","~/ngx-input-file/ngx-input-file/src/app/input-file.module.ts","~/ngx-input-file/ngx-input-file/src/app/repositories/input-file.repository.ts","~/ngx-input-file/ngx-input-file/src/app/components/input-file.component.ts","~/ngx-input-file/ngx-input-file/src/app/dto/file.ts","~/ngx-input-file/ngx-input-file/src/app/directives/drop-zone.directive.ts"],"sourcesContent":["/**\n * Generated bundle index. Do not edit.\n */\n\nexport {DropZoneDirective,InputFileComponent,InputFileModule,InputFileOptions,InputFileRepository} from './public_api';\n","\nexport class InputFileOptions {\n/**\n * @param {?=} authToken\n * @param {?=} authTokenHeader\n */\nconstructor (\npublic authToken?: string,\npublic authTokenHeader?: string\n    ) {}\n}\n\nfunction InputFileOptions_tsickle_Closure_declarations() {\n/** @type {?} */\nInputFileOptions.prototype.authToken;\n/** @type {?} */\nInputFileOptions.prototype.authTokenHeader;\n}\n","import { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { DropZoneDirective } from './directives/drop-zone.directive';\nimport { InputFileComponent } from './components/input-file.component';\nimport { InputFileOptions } from './utils/input-file.options';\nimport { InputFileRepository } from './repositories/input-file.repository';\nexport class InputFileModule {\n/**\n * @param {?=} inputFileRepository\n */\nconstructor (public inputFileRepository?: InputFileRepository) {}\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n    declarations: [\n        DropZoneDirective,\n        InputFileComponent\n    ],\n    imports: [\n        BrowserModule,\n        FormsModule\n    ],\n    exports : [\n        DropZoneDirective,\n        InputFileComponent\n    ],\n    providers: [ InputFileRepository ],\n    entryComponents: [ InputFileComponent ]\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: InputFileRepository, },\n];\n}\n\nfunction InputFileModule_tsickle_Closure_declarations() {\n/** @type {?} */\nInputFileModule.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nInputFileModule.ctorParameters;\n/** @type {?} */\nInputFileModule.prototype.inputFileRepository;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { File } from '../dto/file';\nimport { InputFileOptions } from '../utils/input-file.options';\nexport class InputFileRepository {\nprivate postMethod: string = 'POST';\nprivate options: InputFileOptions;\nconstructor() {}\n/**\n * @param {?} options\n * @return {?}\n */\npublic setOptions(options: InputFileOptions) {\n        this.options = options;\n    }\n/**\n * Posts a file.\n * \n * \n * \\@memberof InputFileRepository\n * @param {?} file\n * @param {?} apiUrl\n * @return {?}\n */\npublic post(file: any, apiUrl: string): Observable<any> {\n        return Observable.create((observer: any) => {\n            let /** @type {?} */ authToken = null;\n            let /** @type {?} */ authTokenHeader = null;\n            if (this.options.authToken != null && this.options.authTokenHeader != null) {\n                authToken = localStorage.getItem(this.options.authToken);\n                authTokenHeader = this.options.authTokenHeader;\n            }\n\n            let /** @type {?} */ formData: FormData = this.buildFormData(file);\n            let /** @type {?} */ xhr: XMLHttpRequest = new XMLHttpRequest();\n\n            xhr.upload.onprogress = (event:any) => {\n                let /** @type {?} */ progress = Math.round(event.lengthComputable ? event.loaded * 100 / event.total : 0);\n            };\n\n            xhr.onload = () => {\n                let /** @type {?} */ response = observer.next(JSON.parse(xhr.response));\n                observer.complete();\n            };\n\n            xhr.onerror = () => {\n                observer.error(xhr.response);\n            };\n\n            xhr.onabort = () => {\n                observer.error();\n            };\n\n            xhr.open(this.postMethod, apiUrl, true);\n            if (this.options.authToken != null && this.options.authTokenHeader != null) {\n                xhr.setRequestHeader(authTokenHeader, authToken);\n            }\n            xhr.send(formData);\n        });\n    }\n/**\n * Builds the form data.\n * \n * \n * \\@memberof InputFileRepository\n * @param {?} file\n * @return {?}\n */\nprivate buildFormData(file: any): FormData {\n        let /** @type {?} */ formData: FormData = new FormData();\n\n        formData.append(\"file\", file.file, file.file.name);\n\n        return formData;\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\nfunction InputFileRepository_tsickle_Closure_declarations() {\n/** @type {?} */\nInputFileRepository.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nInputFileRepository.ctorParameters;\n/** @type {?} */\nInputFileRepository.prototype.postMethod;\n/** @type {?} */\nInputFileRepository.prototype.options;\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","import { Component, ElementRef, EventEmitter, HostListener, Input, Output, ViewChild } from '@angular/core';\nimport { DropZoneDirective } from '../directives/drop-zone.directive';\nimport { File } from '../dto/file';\nexport class InputFileComponent {\npublic inputId: string;\npublic inputAccept: string;\npublic disableUpload = false;\npublic inputMaxFiles = 1;\npublic minimal = false;\npublic model: Array<File> = new Array<File>();\npublic textBrowse = 'Browse';\npublic textFileSelected = 'files selected';\npublic textNoFile = 'No file selected';\npublic textRemove = 'Remove';\npublic textUpload = 'Upload';\npublic limitReached: EventEmitter<any> = new EventEmitter<any>();\npublic acceptedFile: EventEmitter<File> = new EventEmitter<File>();\npublic rejectedFile: EventEmitter<File> = new EventEmitter<File>();\npublic removedFile: EventEmitter<File> = new EventEmitter<File>();\npublic uploadFiles: EventEmitter<any> = new EventEmitter<any>();\npublic inputFile: any;\npublic dropZoneDisabled = false;\npublic isDragOver = false;\npublic isInputActive = false;\nprivate iconExtension = '.png';\nprivate pathIcon = 'assets/img/';\nprivate typeImage = 'image/';\n/**\n * Blur event handler.\n * @return {?}\n */\npublic onBlur(): void {\n        this.isInputActive = false;\n    }\n/**\n * Change event handler.\n * @param {?} event\n * @return {?}\n */\npublic onChange(event: any): void {\n        this.addInputFile(event.target.files);\n    }\n/**\n * Focus event handler\n * @return {?}\n */\npublic onFocus(): void {\n        this.isInputActive = true;\n    }\n/**\n * File Drag Over event handler.\n * @return {?}\n */\npublic onFileDragOver(): void {\n        this.isDragOver = true;\n    }\n/**\n * File Drag Leave event handler.\n * @return {?}\n */\npublic onFileDragLeave(): void {\n        this.isDragOver = false;\n    }\n/**\n * File Drop event handler.\n * @param {?} files\n * @return {?}\n */\npublic onFileDrop(files: any): void {\n        this.isDragOver = false;\n        this.addInputFile(files);\n    }\n/**\n * Remove event handler.\n * Removes all files of the model.\n * @return {?}\n */\npublic onRemove(): void {\n        for (const /** @type {?} */ file of this.model) {\n            this.removedFileHandler(file);\n        }\n        this.removeHandler();\n    }\n/**\n * Remove file event handler.\n * @param {?} index\n * @return {?}\n */\npublic onRemoveFile(index: number): void {\n        this.removedFileHandler(this.model[index]);\n        this.model.splice(index, 1);\n        this.dropZoneDisabled = false;\n        if (!this.model.length) {\n            this.removeHandler();\n        }\n    }\n/**\n * Upload event handler;\n * @return {?}\n */\npublic onUpload(): void {\n        this.uploadFiles.emit();\n    }\n/**\n * Gets the text of the input.\n * @return {?}\n */\npublic getInputText(): string {\n        let /** @type {?} */ inputText: string;\n\n        if (this.model == null || !this.model.length) {\n            inputText = this.textNoFile;\n        } else if (this.model.length < 2 && this.model[0].file != null) {\n            inputText = this.model[0].file.name;\n        } else {\n            inputText = this.model.length + ' ' + this.textFileSelected;\n        }\n\n        return inputText;\n    }\n/**\n * Checks if the model is null or empty.\n * @return {?}\n */\npublic isNotNullOrEmpty(): boolean {\n        return this.model != null && this.model.length != null && this.model.length > 0;\n    }\n/**\n * Accepted file handler.\n * @param {?} file\n * @return {?}\n */\nprivate acceptedFileHandler(file: File): void {\n        this.acceptedFile.emit(file);\n    }\n/**\n * Adds multiple files to the model.\n * @param {?} files\n * @return {?}\n */\nprivate addInputFile(files: Array<any>): void {\n        const /** @type {?} */ limit: number = +this.inputMaxFiles;\n\n        for (let /** @type {?} */ index = 0; index < files.length; index++) {\n            // Checks the limit\n            if (this.model.length < limit) {\n                // Checks the type\n                if (this.isTypeEnabled(files[index])) {\n                    const /** @type {?} */ file = new File();\n                    this.setSize(file, files[index]);\n                    // Checks the icon\n                    if (FileReader && this.isTypeImage(files[index])) {\n                        this.readFileHandler(file, files[index]);\n                    } else {\n                        this.setFileIcon(file, files[index]);\n                    }\n                    file.file = files[index];\n                    this.model.push(file);\n                    this.acceptedFileHandler(file);\n                } else {\n                    this.rejectedFileHandler(files[index]);\n                }\n            } else {\n                // Limit reached\n                break;\n            }\n        }\n\n        if (this.model.length >= limit) {\n            this.limitReachedHandler();\n        }\n    }\n/**\n * Checks if the file is an image.\n * @param {?} file\n * @return {?}\n */\nprivate isTypeImage(file: any): boolean {\n        return file.type.startsWith(this.typeImage);\n    }\n/**\n * Checks if the type of the file is enabled.\n * @param {?} file\n * @return {?}\n */\nprivate isTypeEnabled(file: any): boolean {\n        let /** @type {?} */ enabled = this.inputAccept == null;\n        if (this.inputAccept) {\n            const /** @type {?} */ accept = this.inputAccept.replace('*', '');\n            const /** @type {?} */ types = accept.split(',');\n            for (const /** @type {?} */ type of types) {\n                if (file.type.startsWith(type) || (type.charAt(0) === '.' && file.name.endsWith(type))) {\n                    enabled = true;\n                    break;\n                }\n            }\n        }\n\n        return enabled;\n    }\n/**\n * Limit reached handler.\n * @return {?}\n */\nprivate limitReachedHandler(): void {\n        this.dropZoneDisabled = true;\n        this.limitReached.emit();\n    }\n/**\n * Read file handler.\n * @param {?} file\n * @param {?} image\n * @return {?}\n */\nprivate readFileHandler(file: File, image: any): void {\n        const /** @type {?} */ fr = new FileReader();\n\n        fr.onload = function () {\n            file.icon = fr.result;\n        };\n\n        fr.readAsDataURL(image);\n    }\n/**\n * Rejected file handler.\n * @param {?} file\n * @return {?}\n */\nprivate rejectedFileHandler(file: File): void {\n        this.rejectedFile.emit(file);\n    }\n/**\n * Removed file handler.\n * @param {?} file\n * @return {?}\n */\nprivate removedFileHandler(file: File): void {\n        this.removedFile.emit(file);\n    }\n/**\n * Remove handler.\n * @return {?}\n */\nprivate removeHandler(): void {\n        this.dropZoneDisabled = false;\n        this.inputFile.nativeElement.value = '';\n        this.model = new Array<File>();\n    }\n/**\n * Sets the icon of the file.\n * @param {?} file\n * @param {?} inputFile\n * @return {?}\n */\nprivate setFileIcon(file: File, inputFile: any): void {\n        let /** @type {?} */ icon: string;\n\n        switch (inputFile.type) {\n            case 'application/pdf':\n                icon = 'pdf';\n                break;\n            case 'application/vnd.openxmlformats-officedocument.wordprocessingml.document':\n                icon = 'doc';\n                break;\n            case 'application/zip':\n                icon = 'zip';\n                break;\n            default:\n                icon = 'file';\n        }\n\n        file.icon = this.pathIcon + icon + this.iconExtension;\n    }\n/**\n * Gets the size of the file to display.\n * @param {?} file\n * @param {?} inputFile\n * @return {?}\n */\nprivate setSize(file: File, inputFile: any): void {\n        const /** @type {?} */ size = Math.round(inputFile.size / 1024);\n        file.size = '(' + size + ' KB)';\n    }\n\n    // #endregion\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n    selector: 'input-file',\n    styles: [`\n      .input-file .drop-zone {\n        border: 1px dashed #a2958a;\n        border-radius: 5px;\n        height: 320px;\n        text-align: center; }\n\n      .input-file .drop-zone-minimal {\n        border: 1px dashed #a2958a;\n        border-radius: 5px;\n        height: 38px; }\n\n      .input-file .file-preview {\n        border: 1px solid #ddd;\n        border-radius: 5px;\n        margin-bottom: 5px;\n        overflow: auto;\n        padding: 5px;\n        width: 100%; }\n        .input-file .file-preview .file-preview-item {\n          border: 1px solid #ddd;\n          -webkit-box-shadow: 1px 1px 5px 0 #a2958a;\n                  box-shadow: 1px 1px 5px 0 #a2958a;\n          display: table;\n          float: left;\n          margin: 8px;\n          padding: 6px;\n          position: relative;\n          text-align: center; }\n          .input-file .file-preview .file-preview-item .file-content {\n            height: 170px; }\n            .input-file .file-preview .file-preview-item .file-content img {\n              height: 160px;\n              width: auto; }\n          .input-file .file-preview .file-preview-item .file-thumbnail-footer {\n            height: 70px;\n            padding-top: 10px; }\n            .input-file .file-preview .file-preview-item .file-thumbnail-footer .file-footer-caption {\n              color: #777;\n              display: block;\n              font-size: 11px;\n              margin: 5px auto;\n              overflow: hidden;\n              padding-top: 4px;\n              text-align: center;\n              text-overflow: ellipsis;\n              white-space: nowrap;\n              width: 160px; }\n          .input-file .file-preview .file-preview-item:hover {\n            -webkit-box-shadow: 3px 3px 5px 0 #333;\n                    box-shadow: 3px 3px 5px 0 #333; }\n\n      .input-file .file-caption-main {\n        width: 100%; }\n        .input-file .file-caption-main .input-active {\n          background-color: #fff;\n          border-color: #5cb3fd;\n          color: #464a4c;\n          outline: 0; }\n        .input-file .file-caption-main .file-caption-name :focus {\n          outline: 0; }\n        .input-file .file-caption-main .form-control,\n        .input-file .file-caption-main .btn-action {\n          z-index: 10; }\n\n      .input-file .btn-file input[type='file'] {\n        background: none;\n        cursor: inherit;\n        display: block;\n        min-height: 100%;\n        min-width: 100%;\n        opacity: 0;\n        position: absolute;\n        right: 0;\n        text-align: right;\n        top: 0; }\n    `],\n    template: `\n      <div class=\"row input-file\" dropZone [disabled]=\"dropZoneDisabled\" (fileDragOver)=\"onFileDragOver()\" (fileDragLeave)=\"onFileDragLeave()\" (fileDrop)=\"onFileDrop($event)\">\n          <ng-container *ngIf=\"!minimal; else minimalButton\">    \n              <div class=\"col-12\" *ngIf=\"isDragOver\">\n                  <div class=\"drop-zone\"></div>\n              </div>\n              <div class=\"col-12\" *ngIf=\"isNotNullOrEmpty() && !isDragOver\">\n                  <div class=\"file-preview\">\n                      <button type=\"button\" class=\"close\" (click)=\"onRemove()\">\n                          <span aria-hidden=\"true\">&times;</span>\n                      </button>\n                      <div class=\"file-preview-container\">\n                          <div class=\"file-preview-item\" *ngFor=\"let file of model; let i = index\">\n                              <button type=\"button\" class=\"close\" (click)=\"onRemoveFile(i)\">\n                                  <span aria-hidden=\"true\">&times;</span>\n                              </button>\n                              <div class=\"file-content\">\n                                  <img src=\"{{ file.icon }}\" *ngIf=\"file.icon\"> \n                              </div>\n                              <div class=\"file-thumbnail-footer\">\n                                  <div class=\"file-footer-caption\" *ngIf=\"file.file\">\n                                      <p>{{ file.file.name }}</p>\n                                      <samp>{{ file.size }}</samp>\n                                  </div>\n                              </div>\n                          </div>\n                      </div>\n                  </div>\n              </div>\n              <div class=\"col-12 input-group file-caption-main\" *ngIf=\"!isDragOver\">\n                  <div class=\"form-control\" [ngClass]=\"{'input-active': isInputActive}\">\n                      <div class=\"file-caption-name\" tabindex=\"500\">\n                          <i class=\"fa fa-file-o\" aria-hidden=\"true\" *ngIf=\"isNotNullOrEmpty()\"></i>\n                          <span>{{ getInputText() }}</span>\n                      </div>\n                  </div>\n                  <span class=\"input-group-btn\">\n                      <button class=\"btn btn-secondary btn-action\" type=\"button\" title=\"Clear selected files\" (click)=\"onRemove()\" *ngIf=\"isNotNullOrEmpty()\">\n                          <i class=\"fa fa-trash-o\" aria-hidden=\"true\"></i>  \n                          <span class=\"d-none d-md-inline-flex\">{{ textRemove }}</span>\n                      </button>\n                  </span>\n                  <span class=\"input-group-btn\" *ngIf=\"!disableUpload\">\n                      <button class=\"btn btn-secondary btn-action\" type=\"button\" title=\"Upload selected files\" (click)=\"onUpload()\" *ngIf=\"isNotNullOrEmpty()\">\n                          <i class=\"fa fa-cloud-upload\" aria-hidden=\"true\"></i>  \n                          <span class=\"d-none d-md-inline-flex\">{{ textUpload }}</span>\n                      </button>\n                  </span>\n                  <span class=\"input-group-btn\">\n                      <div class=\"btn btn-primary btn-file\" [ngClass]=\"{'disabled': dropZoneDisabled}\">\n                          <i class=\"fa fa-folder-open-o\" aria-hidden=\"true\"></i>\n                          <span class=\"d-none d-md-inline-flex\">{{ textBrowse }}</span>\n                          <input id=\"{{ inputId }}\" class=\"file\" name=\"input-file-name\" type=\"file\" \n                              accept=\"{{ inputAccept }}\" \n                              [attr.multiple]=\"inputMaxFiles > 1 ? true : null\" \n                              [disabled]=\"dropZoneDisabled\"\n                              (change)=\"onChange($event)\" \n                              (blur)=\"onBlur()\" \n                              (focus)=\"onFocus()\" \n                              #inputFile>\n                      </div>\n                  </span>\n              </div>\n          </ng-container>\n          <ng-template #minimalButton>\n              <div class=\"col-12\" *ngIf=\"isDragOver; else minimalInput\">\n                  <div class=\"drop-zone-minimal\"></div>\n              </div>\n              <ng-template #minimalInput>\n                  <div class=\"col-12\">\n                      <div class=\"btn btn-primary btn-file\" [ngClass]=\"{'disabled': dropZoneDisabled}\">\n                          <span class=\"d-none d-md-inline-flex\">{{ textBrowse }}</span>\n                          <input id=\"{{ inputId }}\" class=\"file\" name=\"input-file-name\" type=\"file\" \n                              accept=\"{{ inputAccept }}\" \n                              [attr.multiple]=\"inputMaxFiles > 1 ? true : null\" \n                              [disabled]=\"dropZoneDisabled\"\n                              (change)=\"onChange($event)\" \n                              (blur)=\"onBlur()\" \n                              (focus)=\"onFocus()\" \n                              #inputFile>\n                      </div>\n                  </div>\n              </ng-template>\n          </ng-template>\n      </div>\n    `\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'inputId': [{ type: Input },],\n'inputAccept': [{ type: Input },],\n'disableUpload': [{ type: Input },],\n'inputMaxFiles': [{ type: Input },],\n'minimal': [{ type: Input },],\n'model': [{ type: Input },],\n'textBrowse': [{ type: Input },],\n'textFileSelected': [{ type: Input },],\n'textNoFile': [{ type: Input },],\n'textRemove': [{ type: Input },],\n'textUpload': [{ type: Input },],\n'limitReached': [{ type: Output },],\n'acceptedFile': [{ type: Output },],\n'rejectedFile': [{ type: Output },],\n'removedFile': [{ type: Output },],\n'uploadFiles': [{ type: Output },],\n'inputFile': [{ type: ViewChild, args: ['inputFile', ] },],\n};\n}\n\nfunction InputFileComponent_tsickle_Closure_declarations() {\n/** @type {?} */\nInputFileComponent.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nInputFileComponent.ctorParameters;\n/** @type {?} */\nInputFileComponent.propDecorators;\n/** @type {?} */\nInputFileComponent.prototype.inputId;\n/** @type {?} */\nInputFileComponent.prototype.inputAccept;\n/** @type {?} */\nInputFileComponent.prototype.disableUpload;\n/** @type {?} */\nInputFileComponent.prototype.inputMaxFiles;\n/** @type {?} */\nInputFileComponent.prototype.minimal;\n/** @type {?} */\nInputFileComponent.prototype.model;\n/** @type {?} */\nInputFileComponent.prototype.textBrowse;\n/** @type {?} */\nInputFileComponent.prototype.textFileSelected;\n/** @type {?} */\nInputFileComponent.prototype.textNoFile;\n/** @type {?} */\nInputFileComponent.prototype.textRemove;\n/** @type {?} */\nInputFileComponent.prototype.textUpload;\n/** @type {?} */\nInputFileComponent.prototype.limitReached;\n/** @type {?} */\nInputFileComponent.prototype.acceptedFile;\n/** @type {?} */\nInputFileComponent.prototype.rejectedFile;\n/** @type {?} */\nInputFileComponent.prototype.removedFile;\n/** @type {?} */\nInputFileComponent.prototype.uploadFiles;\n/** @type {?} */\nInputFileComponent.prototype.inputFile;\n/** @type {?} */\nInputFileComponent.prototype.dropZoneDisabled;\n/** @type {?} */\nInputFileComponent.prototype.isDragOver;\n/** @type {?} */\nInputFileComponent.prototype.isInputActive;\n/** @type {?} */\nInputFileComponent.prototype.iconExtension;\n/** @type {?} */\nInputFileComponent.prototype.pathIcon;\n/** @type {?} */\nInputFileComponent.prototype.typeImage;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n","\nexport class File {\npublic id: number;\npublic size: string;\npublic icon: string;\npublic file: any;\n}\n\nfunction File_tsickle_Closure_declarations() {\n/** @type {?} */\nFile.prototype.id;\n/** @type {?} */\nFile.prototype.size;\n/** @type {?} */\nFile.prototype.icon;\n/** @type {?} */\nFile.prototype.file;\n}\n","import { Directive, EventEmitter, HostListener, Output, Input } from '@angular/core';\nexport class DropZoneDirective {\npublic disabled = false;\npublic fileDragOver = new EventEmitter<any>();\npublic fileDragLeave = new EventEmitter<any>();\npublic fileDrop = new EventEmitter<any>();\npublic isDragOverDisabled = false;\n/**\n * Drag Over event handler.\n * @param {?} event\n * @return {?}\n */\npublic onDragOver(event: Event): void {\n        this.preventAndStopEventPropagation(event);\n        if (!this.isDragOverDisabled && !this.disabled) {\n            this.isDragOverDisabled = true;\n            this.fileDragOver.emit();\n        }\n    }\n/**\n * Drag Leave event handler.\n * @param {?} event\n * @return {?}\n */\npublic onDragLeave(event: Event): void {\n        this.preventAndStopEventPropagation(event);\n        if (this.isDragOverDisabled && !this.disabled) {\n            this.isDragOverDisabled = false;\n            this.fileDragLeave.emit();\n        }\n    }\n/**\n * Drop event handler.\n * @param {?} event\n * @return {?}\n */\npublic onDrop(event: any): void {\n        if (!this.disabled) {\n            this.isDragOverDisabled = false;\n            this.preventAndStopEventPropagation(event);\n            this.fileDrop.emit(event.dataTransfer.files);\n        }\n    }\n/**\n * Prevents and stops event propagration.\n * @param {?} event\n * @return {?}\n */\nprivate preventAndStopEventPropagation(event: Event): void {\n        event.preventDefault();\n        event.stopPropagation();\n    }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Directive, args: [{\n    selector: '[dropZone]'\n}, ] },\n];\n/**\n * @nocollapse\n */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'disabled': [{ type: Input },],\n'fileDragOver': [{ type: Output },],\n'fileDragLeave': [{ type: Output },],\n'fileDrop': [{ type: Output },],\n'onDragOver': [{ type: HostListener, args: ['dragover', ['$event'], ] },],\n'onDragLeave': [{ type: HostListener, args: ['dragleave', ['$event'], ] },],\n'onDrop': [{ type: HostListener, args: ['drop', ['$event'], ] },],\n};\n}\n\nfunction DropZoneDirective_tsickle_Closure_declarations() {\n/** @type {?} */\nDropZoneDirective.decorators;\n/**\n * @nocollapse\n * @type {?}\n */\nDropZoneDirective.ctorParameters;\n/** @type {?} */\nDropZoneDirective.propDecorators;\n/** @type {?} */\nDropZoneDirective.prototype.disabled;\n/** @type {?} */\nDropZoneDirective.prototype.fileDragOver;\n/** @type {?} */\nDropZoneDirective.prototype.fileDragLeave;\n/** @type {?} */\nDropZoneDirective.prototype.fileDrop;\n/** @type {?} */\nDropZoneDirective.prototype.isDragOverDisabled;\n}\n\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"],"names":["Observable"],"mappings":"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"}