{
  "version": 3,
  "file": "ngx-input-file.umd.js",
  "sources": [
    "ng://ngx-input-file/out/src/app/components/input-file.component.ts",
    "ng://ngx-input-file/out/src/app/dto/file.ts",
    "ng://ngx-input-file/out/src/app/directives/drop-zone.directive.ts",
    "ng://ngx-input-file/node_modules/tslib/tslib.es6.js"
  ],
  "sourcesContent": [
    "import { Component, ElementRef, EventEmitter, HostListener, Input, Output, ViewChild } from '@angular/core';\nimport { DropZoneDirective } from '../directives/drop-zone.directive';\nimport { File } from '../dto/file';\n\n@Component ({\n    selector: 'input-file',\n    styles: [`.input-file .drop-zone{\n  border:1px dashed #a2958a;\n  border-radius:5px;\n  height:320px;\n  text-align:center; }\n\n.input-file .drop-zone-minimal{\n  border:1px dashed #a2958a;\n  border-radius:5px;\n  height:38px; }\n\n.input-file .file-preview{\n  border:1px solid #ddd;\n  border-radius:5px;\n  margin-bottom:5px;\n  overflow:auto;\n  padding:5px;\n  width:100%; }\n  .input-file .file-preview .file-preview-item{\n    border:1px solid #ddd;\n    -webkit-box-shadow:1px 1px 5px 0 #a2958a;\n            box-shadow:1px 1px 5px 0 #a2958a;\n    display:table;\n    float:left;\n    margin:8px;\n    padding:6px;\n    position:relative;\n    text-align:center; }\n    .input-file .file-preview .file-preview-item .file-content{\n      height:170px; }\n      .input-file .file-preview .file-preview-item .file-content img{\n        height:160px;\n        width:auto; }\n    .input-file .file-preview .file-preview-item .file-thumbnail-footer{\n      height:70px;\n      padding-top:10px; }\n      .input-file .file-preview .file-preview-item .file-thumbnail-footer .file-footer-caption{\n        color:#777;\n        display:block;\n        font-size:11px;\n        margin:5px auto;\n        overflow:hidden;\n        padding-top:4px;\n        text-align:center;\n        text-overflow:ellipsis;\n        white-space:nowrap;\n        width:160px; }\n    .input-file .file-preview .file-preview-item:hover{\n      -webkit-box-shadow:3px 3px 5px 0 #333;\n              box-shadow:3px 3px 5px 0 #333; }\n\n.input-file .file-caption-main{\n  width:100%; }\n  .input-file .file-caption-main .input-active{\n    background-color:#fff;\n    border-color:#5cb3fd;\n    color:#464a4c;\n    outline:0; }\n  .input-file .file-caption-main .file-caption-name :focus{\n    outline:0; }\n  .input-file .file-caption-main .form-control,\n  .input-file .file-caption-main .btn-action{\n    z-index:10; }\n\n.input-file .btn-file input[type='file']{\n  background:none;\n  cursor:inherit;\n  display:block;\n  min-height:100%;\n  min-width:100%;\n  opacity:0;\n  position:absolute;\n  right:0;\n  text-align:right;\n  top:0; }\n`],\n    template: `<div class=\"row input-file\" dropZone [disabled]=\"dropZoneDisabled\" (fileDragOver)=\"onFileDragOver()\" (fileDragLeave)=\"onFileDragLeave()\" (fileDrop)=\"onFileDrop($event)\">\n    <ng-container *ngIf=\"!minimal; else minimalButton\">    \n        <div class=\"col-12\" *ngIf=\"isDragOver\">\n            <div class=\"drop-zone\"></div>\n        </div>\n        <div class=\"col-12\" *ngIf=\"isNotNullOrEmpty() && !isDragOver\">\n            <div class=\"file-preview\">\n                <button type=\"button\" class=\"close\" (click)=\"onRemove()\">\n                    <span aria-hidden=\"true\">&times;</span>\n                </button>\n                <div class=\"file-preview-container\">\n                    <div class=\"file-preview-item\" *ngFor=\"let file of model; let i = index\">\n                        <button type=\"button\" class=\"close\" (click)=\"onRemoveFile(i)\">\n                            <span aria-hidden=\"true\">&times;</span>\n                        </button>\n                        <div class=\"file-content\">\n                            <img src=\"{{ file.icon }}\" *ngIf=\"file.icon\"> \n                        </div>\n                        <div class=\"file-thumbnail-footer\">\n                            <div class=\"file-footer-caption\" *ngIf=\"file.file\">\n                                <p>{{ file.file.name }}</p>\n                                <samp>{{ file.size }}</samp>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class=\"col-12 input-group file-caption-main\" *ngIf=\"!isDragOver\">\n            <div class=\"form-control\" [ngClass]=\"{'input-active': isInputActive}\">\n                <div class=\"file-caption-name\" tabindex=\"500\">\n                    <i class=\"fa fa-file-o\" aria-hidden=\"true\" *ngIf=\"isNotNullOrEmpty()\"></i>\n                    <span>{{ getInputText() }}</span>\n                </div>\n            </div>\n            <div class=\"input-group-append\">\n                <button class=\"btn btn-secondary btn-action\" type=\"button\" title=\"Clear selected files\" (click)=\"onRemove()\" *ngIf=\"isNotNullOrEmpty()\">\n                    <i class=\"fa fa-trash-o\" aria-hidden=\"true\"></i>  \n                    <span class=\"d-none d-md-inline-flex\">{{ textRemove }}</span>\n                </button>\n            </div>\n            <div class=\"input-group-append\" *ngIf=\"!disableUpload\">\n                <button class=\"btn btn-secondary btn-action\" type=\"button\" title=\"Upload selected files\" (click)=\"onUpload()\" *ngIf=\"isNotNullOrEmpty()\">\n                    <i class=\"fa fa-cloud-upload\" aria-hidden=\"true\"></i>  \n                    <span class=\"d-none d-md-inline-flex\">{{ textUpload }}</span>\n                </button>\n            </div>\n            <div class=\"input-group-append\">\n                <div class=\"btn btn-primary btn-file\" [ngClass]=\"{'disabled': dropZoneDisabled}\">\n                    <i class=\"fa fa-folder-open-o\" aria-hidden=\"true\"></i>\n                    <span class=\"d-none d-md-inline-flex\">{{ textBrowse }}</span>\n                    <input id=\"{{ inputId }}\" class=\"file\" name=\"input-file-name\" type=\"file\" \n                        accept=\"{{ inputAccept }}\" \n                        [attr.multiple]=\"inputMaxFiles > 1 ? true : null\" \n                        [disabled]=\"dropZoneDisabled\"\n                        (change)=\"onChange($event)\" \n                        (blur)=\"onBlur()\" \n                        (focus)=\"onFocus()\" \n                        #inputFile>\n                </div>\n            </div>\n        </div>\n    </ng-container>\n    <ng-template #minimalButton>\n        <div class=\"col-12\" *ngIf=\"isDragOver; else minimalInput\">\n            <div class=\"drop-zone-minimal\"></div>\n        </div>\n        <ng-template #minimalInput>\n            <div class=\"col-12\">\n                <div class=\"btn btn-primary btn-file\">\n                    <span class=\"d-none d-md-inline-flex\">{{ textBrowse }}</span>\n                    <input id=\"{{ inputId }}\" class=\"file\" name=\"input-file-name\" type=\"file\" \n                        accept=\"{{ inputAccept }}\"\n                        [attr.multiple]=\"inputMaxFiles > 1 ? true : null\"\n                        (change)=\"onChange($event)\"\n                        #inputFile>\n                </div>\n            </div>\n        </ng-template>\n    </ng-template>\n</div>`\n})\n\nexport class InputFileComponent {\n    // #region public attributes\n    // #region input\n    @Input() public inputId: string;\n    @Input() public inputAccept: string;\n    @Input() public disableUpload = false;\n    @Input() public inputMaxFiles = 1;\n    @Input() public minimal = false;\n    @Input() public model: Array<File> = new Array<File>();\n    @Input() public textBrowse = 'Browse';\n    @Input() public textFileSelected = 'files selected';\n    @Input() public textNoFile = 'No file selected';\n    @Input() public textRemove = 'Remove';\n    @Input() public textUpload = 'Upload';\n    // #endregion\n\n    // #region output\n    @Output() public limitReached: EventEmitter<any> = new EventEmitter<any>();\n    @Output() public acceptedFile: EventEmitter<File> = new EventEmitter<File>();\n    @Output() public rejectedFile: EventEmitter<File> = new EventEmitter<File>();\n    @Output() public removedFile: EventEmitter<File> = new EventEmitter<File>();\n    @Output() public uploadFiles: EventEmitter<any> = new EventEmitter<any>();\n    // #endregion\n\n    // #region view child\n    @ViewChild('inputFile')public inputFile: any;\n    // #region view child\n\n    public dropZoneDisabled = false;\n    public isDragOver = false;\n    public isInputActive = false;\n    // #endregion\n    // #region public attributes\n    private iconExtension = '.png';\n    private pathIcon = 'assets/img/';\n    private typeImage = 'image/';\n    // #endregion\n\n    // #region public functions\n    // #region events\n\n    /**\n     * Blur event handler.\n     */\n    public onBlur(): void {\n        this.isInputActive = false;\n    }\n\n    /**\n     * Change event handler.\n     * @param event\n     */\n    public onChange(event: any): void {\n        this.addInputFile(event.target.files);\n    }\n\n    /**\n     * Focus event handler\n     */\n    public onFocus(): void {\n        this.isInputActive = true;\n    }\n\n    /**\n     * File Drag Over event handler.\n     */\n    public onFileDragOver(): void {\n        this.isDragOver = true;\n    }\n\n    /**\n     * File Drag Leave event handler.\n     */\n    public onFileDragLeave(): void {\n        this.isDragOver = false;\n    }\n\n    /**\n     * File Drop event handler.\n     * @param files.\n     */\n    public onFileDrop(files: any): void {\n        this.isDragOver = false;\n        this.addInputFile(files);\n    }\n\n    /**\n     * Remove event handler.\n     * Removes all files of the model.\n     */\n    public onRemove(): void {\n        for (const file of this.model) {\n            this.removedFileHandler(file);\n        }\n        this.removeHandler();\n    }\n\n    /**\n     * Remove file event handler.\n     * @param index\n     */\n    public onRemoveFile(index: number): void {\n        this.removedFileHandler(this.model[index]);\n        this.model.splice(index, 1);\n        this.dropZoneDisabled = false;\n        if (!this.model.length) {\n            this.removeHandler();\n        }\n    }\n\n    /**\n     * Upload event handler;\n     */\n    public onUpload(): void {\n        this.uploadFiles.emit();\n    }\n\n    // #endregion\n\n    // #region functions\n\n    /**\n     * Gets the text of the input.\n     */\n    public getInputText(): string {\n        let inputText: string;\n\n        if (this.model == null || !this.model.length) {\n            inputText = this.textNoFile;\n        } else if (this.model.length < 2 && this.model[0].file != null) {\n            inputText = this.model[0].file.name;\n        } else {\n            inputText = this.model.length + ' ' + this.textFileSelected;\n        }\n\n        return inputText;\n    }\n\n    /**\n     * Checks if the model is null or empty.\n     */\n    public isNotNullOrEmpty(): boolean {\n        return this.model != null && this.model.length != null && this.model.length > 0;\n    }\n\n    // #endregion\n    // #endregion\n\n    // #region private functions\n\n    /**\n     * Accepted file handler.\n     * @param file\n     */\n    private acceptedFileHandler(file: File): void {\n        this.acceptedFile.emit(file);\n    }\n\n    /**\n     * Adds multiple files to the model.\n     * @param files\n     */\n    private addInputFile(files: Array<any>): void {\n        const limit: number = +this.inputMaxFiles;\n\n        for (let index = 0; index < files.length; index++) {\n            // Checks the limit\n            if (this.model.length < limit) {\n                // Checks the type\n                if (this.isTypeEnabled(files[index])) {\n                    const file = new File();\n                    this.setSize(file, files[index]);\n                    // Checks the icon\n                    if (FileReader && this.isTypeImage(files[index])) {\n                        this.readFileHandler(file, files[index]);\n                    } else {\n                        this.setFileIcon(file, files[index]);\n                    }\n                    file.file = files[index];\n                    this.model.push(file);\n                    this.acceptedFileHandler(file);\n                } else {\n                    this.rejectedFileHandler(files[index]);\n                }\n            } else {\n                // Limit reached\n                break;\n            }\n        }\n\n        if (this.model.length >= limit && !this.minimal) {\n            this.limitReachedHandler();\n        }\n    }\n\n    /**\n     * Checks if the file is an image.\n     * @param file\n     */\n    private isTypeImage(file: any): boolean {\n        return file.type.startsWith(this.typeImage);\n    }\n\n    /**\n     * Checks if the type of the file is enabled.\n     * @param file\n     */\n    private isTypeEnabled(file: any): boolean {\n        let enabled = this.inputAccept == null;\n        if (this.inputAccept) {\n            const accept = this.inputAccept.replace('*', '');\n            const types = accept.split(',');\n            for (const type of types) {\n                if (file.type.startsWith(type) || (type.charAt(0) === '.' && file.name.endsWith(type))) {\n                    enabled = true;\n                    break;\n                }\n            }\n        }\n\n        return enabled;\n    }\n\n    /**\n     * Limit reached handler.\n     */\n    private limitReachedHandler(): void {\n        this.dropZoneDisabled = true;\n        this.limitReached.emit();\n    }\n\n    /**\n     * Read file handler.\n     * @param image.\n     */\n    private readFileHandler(file: File, image: any): void {\n        const fr = new FileReader();\n\n        fr.onload = function () {\n            file.icon = fr.result;\n        };\n\n        fr.readAsDataURL(image);\n    }\n\n    /**\n     * Rejected file handler.\n     * @param file\n     */\n    private rejectedFileHandler(file: File): void {\n        this.rejectedFile.emit(file);\n    }\n\n    /**\n     * Removed file handler.\n     * @param file\n     */\n    private removedFileHandler(file: File): void {\n        this.removedFile.emit(file);\n    }\n\n    /**\n     * Remove handler.\n     */\n    private removeHandler(): void {\n        this.dropZoneDisabled = false;\n        this.inputFile.nativeElement.value = '';\n        this.model = new Array<File>();\n    }\n\n    /**\n     * Sets the icon of the file.\n     * @param file\n     * @param inputFile\n     */\n    private setFileIcon(file: File, inputFile: any): void {\n        let icon: string;\n\n        switch (inputFile.type) {\n            case 'application/pdf':\n                icon = 'pdf';\n                break;\n            case 'application/vnd.openxmlformats-officedocument.wordprocessingml.document':\n                icon = 'doc';\n                break;\n            case 'application/zip':\n                icon = 'zip';\n                break;\n            default:\n                icon = 'file';\n        }\n\n        file.icon = this.pathIcon + icon + this.iconExtension;\n    }\n\n    /**\n     * Gets the size of the file to display.\n     * @param file\n     */\n    private setSize(file: File, inputFile: any): void {\n        const size = Math.round(inputFile.size / 1024);\n        file.size = '(' + size + ' KB)';\n    }\n\n    // #endregion\n}\n",
    "export class File {\n    public id: number;\n    public size: string;\n    public icon: string;\n    public file: any;\n}\n",
    "import { Directive, EventEmitter, HostListener, Output, Input } from '@angular/core';\n\n@Directive({\n    selector: '[dropZone]'\n})\n\nexport class DropZoneDirective {\n    @Input() public disabled = false;\n    @Output() public fileDragOver = new EventEmitter<any>();\n    @Output() public fileDragLeave = new EventEmitter<any>();\n    @Output() public fileDrop = new EventEmitter<any>();\n\n    public isDragOverDisabled = false;\n\n    /**\n     * Drag Over event handler.\n     * @param event\n     */\n    @HostListener('dragover', ['$event'])\n    public onDragOver(event: Event): void {\n        this.preventAndStopEventPropagation(event);\n        if (!this.isDragOverDisabled && !this.disabled) {\n            this.isDragOverDisabled = true;\n            this.fileDragOver.emit();\n        }\n    }\n\n    /**\n     * Drag Leave event handler.\n     * @param event\n     */\n    @HostListener('dragleave', ['$event'])\n    public onDragLeave(event: Event): void {\n        this.preventAndStopEventPropagation(event);\n        if (this.isDragOverDisabled && !this.disabled) {\n            this.isDragOverDisabled = false;\n            this.fileDragLeave.emit();\n        }\n    }\n\n    /**\n     * Drop event handler.\n     * @param event\n     */\n    @HostListener('drop', ['$event'])\n    public onDrop(event: any): void {\n        if (!this.disabled) {\n            this.isDragOverDisabled = false;\n            this.preventAndStopEventPropagation(event);\n            this.fileDrop.emit(event.dataTransfer.files);\n        }\n    }\n\n    /**\n     * Prevents and stops event propagration.\n     * @param event\n     */\n    private preventAndStopEventPropagation(event: Event): void {\n        event.preventDefault();\n        event.stopPropagation();\n    }\n}\n",
    "/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = Object.setPrototypeOf ||\r\n    ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n    function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = Object.assign || function __assign(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n    }\r\n    return t;\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [0, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { if (o[n]) i[n] = function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; }; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator];\r\n    return m ? m.call(o) : typeof __values === \"function\" ? __values(o) : o[Symbol.iterator]();\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n"
  ],
  "names": [
    "tslib_1.__values",
    "EventEmitter",
    "HostListener",
    "Output",
    "Input",
    "Directive"
  ],
  "mappings": "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"
}
