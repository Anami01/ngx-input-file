{"__symbolic":"module","version":4,"metadata":{"DropZoneDirective":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Directive","line":2,"character":1},"arguments":[{"selector":"[dropZone]"}]}],"members":{"disabled":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":7,"character":5}}]}],"fileDragOver":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":8,"character":5}}]}],"fileDragLeave":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":9,"character":5}}]}],"fileDrop":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":10,"character":5}}]}],"onDragOver":[{"__symbolic":"method","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"HostListener","line":18,"character":5},"arguments":["dragover",["$event"]]}]}],"onDragLeave":[{"__symbolic":"method","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"HostListener","line":31,"character":5},"arguments":["dragleave",["$event"]]}]}],"onDrop":[{"__symbolic":"method","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"HostListener","line":44,"character":5},"arguments":["drop",["$event"]]}]}],"preventAndStopEventPropagation":[{"__symbolic":"method"}]}},"InputFileComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":4,"character":1},"arguments":[{"selector":"input-file","styles":[".input-file .drop-zone{\n  border:1px dashed #a2958a;\n  border-radius:5px;\n  height:320px;\n  text-align:center; }\n\n.input-file .drop-zone-minimal{\n  border:1px dashed #a2958a;\n  border-radius:5px;\n  height:38px; }\n\n.input-file .file-preview{\n  border:1px solid #ddd;\n  border-radius:5px;\n  margin-bottom:5px;\n  overflow:auto;\n  padding:5px;\n  width:100%; }\n  .input-file .file-preview .file-preview-item{\n    border:1px solid #ddd;\n    -webkit-box-shadow:1px 1px 5px 0 #a2958a;\n            box-shadow:1px 1px 5px 0 #a2958a;\n    display:table;\n    float:left;\n    margin:8px;\n    padding:6px;\n    position:relative;\n    text-align:center; }\n    .input-file .file-preview .file-preview-item .file-content{\n      height:170px; }\n      .input-file .file-preview .file-preview-item .file-content img{\n        height:160px;\n        width:auto; }\n    .input-file .file-preview .file-preview-item .file-thumbnail-footer{\n      height:70px;\n      padding-top:10px; }\n      .input-file .file-preview .file-preview-item .file-thumbnail-footer .file-footer-caption{\n        color:#777;\n        display:block;\n        font-size:11px;\n        margin:5px auto;\n        overflow:hidden;\n        padding-top:4px;\n        text-align:center;\n        text-overflow:ellipsis;\n        white-space:nowrap;\n        width:160px; }\n    .input-file .file-preview .file-preview-item:hover{\n      -webkit-box-shadow:3px 3px 5px 0 #333;\n              box-shadow:3px 3px 5px 0 #333; }\n\n.input-file .file-caption-main{\n  width:100%; }\n  .input-file .file-caption-main .input-active{\n    background-color:#fff;\n    border-color:#5cb3fd;\n    color:#464a4c;\n    outline:0; }\n  .input-file .file-caption-main .file-caption-name :focus{\n    outline:0; }\n  .input-file .file-caption-main .form-control,\n  .input-file .file-caption-main .btn-action{\n    z-index:10; }\n\n.input-file .btn-file input[type='file']{\n  background:none;\n  cursor:inherit;\n  display:block;\n  min-height:100%;\n  min-width:100%;\n  opacity:0;\n  position:absolute;\n  right:0;\n  text-align:right;\n  top:0; }\n"],"template":"<div class=\"row input-file\" dropZone [disabled]=\"dropZoneDisabled\" (fileDragOver)=\"onFileDragOver()\" (fileDragLeave)=\"onFileDragLeave()\" (fileDrop)=\"onFileDrop($event)\">\n    <ng-container *ngIf=\"!minimal; else minimalButton\">    \n        <div class=\"col-12\" *ngIf=\"isDragOver\">\n            <div class=\"drop-zone\"></div>\n        </div>\n        <div class=\"col-12\" *ngIf=\"isNotNullOrEmpty() && !isDragOver\">\n            <div class=\"file-preview\">\n                <button type=\"button\" class=\"close\" (click)=\"onRemove()\">\n                    <span aria-hidden=\"true\">&times;</span>\n                </button>\n                <div class=\"file-preview-container\">\n                    <div class=\"file-preview-item\" *ngFor=\"let file of model; let i = index\">\n                        <button type=\"button\" class=\"close\" (click)=\"onRemoveFile(i)\">\n                            <span aria-hidden=\"true\">&times;</span>\n                        </button>\n                        <div class=\"file-content\">\n                            <img src=\"{{ file.icon }}\" *ngIf=\"file.icon\"> \n                        </div>\n                        <div class=\"file-thumbnail-footer\">\n                            <div class=\"file-footer-caption\" *ngIf=\"file.file\">\n                                <p>{{ file.file.name }}</p>\n                                <samp>{{ file.size }}</samp>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <div class=\"col-12 input-group file-caption-main\" *ngIf=\"!isDragOver\">\n            <div class=\"form-control\" [ngClass]=\"{'input-active': isInputActive}\">\n                <div class=\"file-caption-name\" tabindex=\"500\">\n                    <i class=\"fa fa-file-o\" aria-hidden=\"true\" *ngIf=\"isNotNullOrEmpty()\"></i>\n                    <span>{{ getInputText() }}</span>\n                </div>\n            </div>\n            <div class=\"input-group-append\">\n                <button class=\"btn btn-secondary btn-action\" type=\"button\" title=\"Clear selected files\" (click)=\"onRemove()\" *ngIf=\"isNotNullOrEmpty()\">\n                    <i class=\"fa fa-trash-o\" aria-hidden=\"true\"></i>  \n                    <span class=\"d-none d-md-inline-flex\">{{ textRemove }}</span>\n                </button>\n            </div>\n            <div class=\"input-group-append\" *ngIf=\"!disableUpload\">\n                <button class=\"btn btn-secondary btn-action\" type=\"button\" title=\"Upload selected files\" (click)=\"onUpload()\" *ngIf=\"isNotNullOrEmpty()\">\n                    <i class=\"fa fa-cloud-upload\" aria-hidden=\"true\"></i>  \n                    <span class=\"d-none d-md-inline-flex\">{{ textUpload }}</span>\n                </button>\n            </div>\n            <div class=\"input-group-append\">\n                <div class=\"btn btn-primary btn-file\" [ngClass]=\"{'disabled': dropZoneDisabled}\">\n                    <i class=\"fa fa-folder-open-o\" aria-hidden=\"true\"></i>\n                    <span class=\"d-none d-md-inline-flex\">{{ textBrowse }}</span>\n                    <input id=\"{{ inputId }}\" class=\"file\" name=\"input-file-name\" type=\"file\" \n                        accept=\"{{ inputAccept }}\" \n                        [attr.multiple]=\"inputMaxFiles > 1 ? true : null\" \n                        [disabled]=\"dropZoneDisabled\"\n                        (change)=\"onChange($event)\" \n                        (blur)=\"onBlur()\" \n                        (focus)=\"onFocus()\" \n                        #inputFile>\n                </div>\n            </div>\n        </div>\n    </ng-container>\n    <ng-template #minimalButton>\n        <div class=\"col-12\" *ngIf=\"isDragOver; else minimalInput\">\n            <div class=\"drop-zone-minimal\"></div>\n        </div>\n        <ng-template #minimalInput>\n            <div class=\"col-12\">\n                <div class=\"btn btn-primary btn-file\">\n                    <span class=\"d-none d-md-inline-flex\">{{ textBrowse }}</span>\n                    <input id=\"{{ inputId }}\" class=\"file\" name=\"input-file-name\" type=\"file\" \n                        accept=\"{{ inputAccept }}\"\n                        [attr.multiple]=\"inputMaxFiles > 1 ? true : null\"\n                        (change)=\"onChange($event)\"\n                        #inputFile>\n                </div>\n            </div>\n        </ng-template>\n    </ng-template>\n</div>"}]}],"members":{"inputId":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":168,"character":5}}]}],"inputAccept":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":169,"character":5}}]}],"disableUpload":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":170,"character":5}}]}],"inputMaxFiles":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":171,"character":5}}]}],"minimal":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":172,"character":5}}]}],"model":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":173,"character":5}}]}],"textBrowse":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":174,"character":5}}]}],"textFileSelected":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":175,"character":5}}]}],"textNoFile":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":176,"character":5}}]}],"textRemove":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":177,"character":5}}]}],"textUpload":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":178,"character":5}}]}],"limitReached":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":182,"character":5}}]}],"acceptedFile":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":183,"character":5}}]}],"rejectedFile":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":184,"character":5}}]}],"removedFile":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":185,"character":5}}]}],"uploadFiles":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":186,"character":5}}]}],"inputFile":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild","line":190,"character":5},"arguments":["inputFile"]}]}],"onBlur":[{"__symbolic":"method"}],"onChange":[{"__symbolic":"method"}],"onFocus":[{"__symbolic":"method"}],"onFileDragOver":[{"__symbolic":"method"}],"onFileDragLeave":[{"__symbolic":"method"}],"onFileDrop":[{"__symbolic":"method"}],"onRemove":[{"__symbolic":"method"}],"onRemoveFile":[{"__symbolic":"method"}],"onUpload":[{"__symbolic":"method"}],"getInputText":[{"__symbolic":"method"}],"isNotNullOrEmpty":[{"__symbolic":"method"}],"acceptedFileHandler":[{"__symbolic":"method"}],"addInputFile":[{"__symbolic":"method"}],"isTypeImage":[{"__symbolic":"method"}],"isTypeEnabled":[{"__symbolic":"method"}],"limitReachedHandler":[{"__symbolic":"method"}],"readFileHandler":[{"__symbolic":"method"}],"rejectedFileHandler":[{"__symbolic":"method"}],"removedFileHandler":[{"__symbolic":"method"}],"removeHandler":[{"__symbolic":"method"}],"setFileIcon":[{"__symbolic":"method"}],"setSize":[{"__symbolic":"method"}]}},"InputFileModule":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"NgModule","line":7,"character":1},"arguments":[{"declarations":[{"__symbolic":"reference","name":"DropZoneDirective"},{"__symbolic":"reference","name":"InputFileComponent"}],"imports":[{"__symbolic":"reference","module":"@angular/platform-browser","name":"BrowserModule","line":13,"character":8},{"__symbolic":"reference","module":"@angular/forms","name":"FormsModule","line":14,"character":8},{"__symbolic":"reference","module":"@angular/common/http","name":"HttpClientModule","line":15,"character":8}],"exports":[{"__symbolic":"reference","name":"DropZoneDirective"},{"__symbolic":"reference","name":"InputFileComponent"}],"providers":[],"entryComponents":[{"__symbolic":"reference","name":"InputFileComponent"}]}]}],"members":{}}},"origins":{"DropZoneDirective":"./src/app/directives/drop-zone.directive","InputFileComponent":"./src/app/components/input-file.component","InputFileModule":"./src/app/input-file.module"},"importAs":"ngx-input-file"}